<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cs636</groupId>
	<artifactId>music3</artifactId>
	<version>1</version>
	<name>pizza3</name>
	<description>music store web app using Maven, Spring Boot, JDBC, JUnit</description>
	<packaging>jar</packaging>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.12.RELEASE</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<!-- The main class to use -->
		<start-class>cs636.music.presentation.SBApplication</start-class>
	</properties>
	<repositories>
		<!-- for Oracle driver -->
		<repository>
			<id>datanucleus</id>
			<name>repo with Oracle JDBC driver ojdbc6.jar </name>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3</version>
			<scope>runtime</scope>
		</dependency>

		<!-- The following dependency "manages", mysql, h2, starter-jdbc, tomcat, 
			etc. but we still need the dependencies on them to get the jars in place. 
			Here "manages" means acknowledges compatibility and knows the best version 
			to use, so in these cases don't list a version with the dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- for Spring JDBC Datasource -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- With spring-boot-starter-jdbc, need to list deps for JDBC drivers -->
		<!-- mysql and h2 come with spring-boot, so no versions needed here -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!-- <scope>test</scope>    we use it for normal execution too -->
		</dependency>
		<!-- JSP processor for web pages -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- JSTL library for JSP pages, for <c:if, etc. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<!-- to support REST endpoints /mappings, /health, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- for JUnit testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- end of dependencies managed by Spring Boot -->
		<!-- https://mvnrepository.com/artifact/org.springframework.session/spring-session-core -->
		<!-- to support using HTTPServletRequest in controllers, for session variables -->
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>
		<!-- for Selenium testing (browser under test control) version managed by Spring starter -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<!-- build executable jar with all dependencies -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layout>JAR</layout>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>